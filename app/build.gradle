apply plugin: 'com.android.application'

def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        buildConfigField "int", "APK_TYPE", "0"
        buildConfigField "String", "GuestAddress", "\"http://www.tgbbx.com/apinew/api6_6sh.php\""
        buildConfigField "String", "Address", "\"http://www.tgbbx.com/apinew/api6_4.php\""
        minSdkVersion 12
        targetSdkVersion 22
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    signingConfigs {
        debug {
        }
        release {
            storeFile file("signfree")
            storePassword "111111"
            keyAlias "wanglizhi"
            keyPassword "111111"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
    }

    // 友盟多渠道打包
    productFlavors {

        Type21 {
            applicationId "com.hyx.android.Game351"
            buildConfigField "String", "Address", "\"http://www.tgbbx.com/apinew/api6_2.php\""
            buildConfigField "int", "APK_TYPE", "0"
            versionCode 20160720
            versionName "9.1.4"
        }

        CopyRead {
            applicationId "com.tgbbx"
            buildConfigField "int", "APK_TYPE", "1"
            versionCode 20160710
            versionName "9.1.4"
        }

        FastRecord {
            applicationId "com.tgbbx2"
            buildConfigField "int", "APK_TYPE", "2"
            versionCode 20151219
            versionName "9.0.3"
        }

        Meiju {
            applicationId "com.tiegan.meiju"
            buildConfigField "String", "GuestAddress", "\"http://www.tgbbx.com/apinew/api6_dytest.php\""
            buildConfigField "String", "Address", "\"http://www.tgbbx.com/apinew/api6_dy.php\""
            buildConfigField "int", "APK_TYPE", "3"
            versionCode 20160615
            versionName "9.1.3"
        }



        productFlavors.all { flavor ->
            flavor.manifestPlaceholders = [CURRENT_APK_TYPE: name]
        }
    }
    //修改生成的Apk名
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                // 输出apk名称为Haioo_v1.0_2015-01-15_wandoujia-xxx.apk
                def fileName = outputFile.name.replace("app", "BBXStudy-v${variant.versionName}-${releaseTime()}");
//_${variant.productFlavors[0].name}
                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':library')
    compile 'com.loopj.android:android-async-http:1.4.9'
    compile files('libs/alipaysdk.jar')
    compile files('libs/alipaysecsdk.jar')
    compile files('libs/alipayutdid.jar')
    compile files('libs/fastjson-1.1.27-android.jar')
    compile files('libs/gson-2.2.4.jar')
    compile files('libs/library_photoview.jar')
    compile files('libs/ShareSDK-Core-2.4.2.jar')
    compile files('libs/ShareSDK-QQ-2.4.2.jar')
    compile files('libs/ShareSDK-QZone-2.4.2.jar')
    compile files('libs/ShareSDK-SinaWeibo-2.4.2.jar')
    compile files('libs/ShareSDK-Wechat-2.4.2.jar')
    compile files('libs/ShareSDK-Wechat-Core-2.4.2.jar')
    compile files('libs/ShareSDK-Wechat-Favorite-2.4.2.jar')
    compile files('libs/ShareSDK-Wechat-Moments-2.4.2.jar')
    compile files('libs/universal-image-loader-1.9.2-SNAPSHOT-with-sources.jar')
}

task copyNativeLibs(type: Copy) {
    from fileTree(dir: 'libs', include: '**/*.so') into 'build/lib'
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn copyNativeLibs
}
clean.dependsOn 'cleanCopyNativeLibs'

